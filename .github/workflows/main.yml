name: Compile kernel
on:
  workflow_dispatch:
jobs:
  Compile_kernel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.unRAID_audit }}
      - name: Get repo version numbers
        shell: bash
        run: |
          #!/bin/bash
          echo "----------------------------------------[Working directory: $(pwd)]--------------------------------------------------"
          ls -l
          while IFS= read -r line; do
              key=$(echo "$line" | cut -d'=' -f1)
              value=$(echo "$line" | cut -d'=' -f2)
              case "$key" in
                  "KERNEL_VERSION") REPO_KERNEL_VERSION="$value" ;;
                  "UNRAID_VERSION") REPO_UNRAID_VERSION="$value" ;;
              esac
          done < "versions.config"
          echo "Repo kernel version: $REPO_KERNEL_VERSION"
          echo "Repo unRAID version: $REPO_UNRAID_VERSION"
          echo "REPO_KERNEL_VERSION=$REPO_KERNEL_VERSION" >> "$GITHUB_ENV"
          echo "REPO_UNRAID_VERSION=$REPO_UNRAID_VERSION" >> "$GITHUB_ENV"
          echo "WD=$(pwd)" >> "$GITHUB_ENV"
      - name: Get latest version numbers
        shell: bash
        run: |
          #!/bin/bash
          echo "----------------------------------------[Working directory: $(pwd)]--------------------------------------------------"
          wget "https://unraid-dl.sfo2.cdn.digitaloceanspaces.com/stable/unRAIDServer.plg"
          xml_file="unRAIDServer.plg"
          if [ ! -f "$xml_file" ]; then
            echo "XML file not found: $xml_file"
            exit 1
          fi
          KERNEL_VERSION=$(sed -n 's/<!ENTITY kernel\s*"\([0-9.]*\)-Unraid">/\1/p' "$xml_file")
          UNRAID_VERSION=$(sed -n 's/<!ENTITY version\s*"\(.*\)">/\1/p' "$xml_file")
          echo "KERNEL_VERSION=$KERNEL_VERSION" >> "$GITHUB_ENV"
          echo "MAJOR_VERSION=$(sed -n 's/<!ENTITY kernel\s*"\([0-9]*\)\..*">/\1/p' "$xml_file")" >> "$GITHUB_ENV"
          echo "UNRAID_VERSION=$UNRAID_VERSION" >> "$GITHUB_ENV"
          echo "Kernel version: $KERNEL_VERSION"
          echo "unRAID version: $UNRAID_VERSION"
          rm unRAIDServer.plg
      - name: Compare version numbers
        id: set_flag
        shell: bash
        run: |
          #!/bin/bash
          if $(dpkg --compare-versions $KERNEL_VERSION gt $REPO_KERNEL_VERSION)
          then
            echo "UPDATE=True" >> "$GITHUB_ENV"
            echo "::set-output name=condition::true"
          else
            echo "There is no new kernel version. No need to update. Aborting..."
          fi
          echo "UPDATE=True" >> "$GITHUB_ENV"
      - name: Setup environment
        shell: bash
        if: env.UPDATE == 'True'
        run: |
          #!/bin/bash
          echo "----------------------------------------[Working directory: $(pwd)]--------------------------------------------------"
          echo "----------------------------------------[Installing dependencies]-----------------------------------------------------"
          sudo apt -y install make gcc bison libelf-dev
          mkdir -p unraid
          cd unraid
          echo "----------------------------------------[Downloading kernel...]-------------------------------------------------------"
          wget -nvc https://mirrors.edge.kernel.org/pub/linux/kernel/v$MAJOR_VERSION.x/linux-$KERNEL_VERSION.tar.xz
          echo "----------------------------------------[Downloading unRAID...]-------------------------------------------------------"
          wget -nvc https://unraid-dl.sfo2.cdn.digitaloceanspaces.com/stable/unRAIDServer-$UNRAID_VERSION-x86_64.zip
      - name: Preparing build
        shell: bash
        if: env.UPDATE == 'True'
        run: |
          cd unraid
          mkdir -p linux
          echo "----------------------------------------[Extracting kernel...]--------------------------------------------------------"
          tar -xf linux-$KERNEL_VERSION.tar.xz -C linux --strip-components 1
          unzip unRAIDServer-$UNRAID_VERSION-x86_64.zip -d unRAIDServer
          echo "----------------------------------------Extracting unRAID...----------------------------------------------------------"
          cd unRAIDServer
          echo "----------------------------------------[Unsquashing file system...]--------------------------------------------------"
          unsquashfs -d patches bzfirmware src
          cd ..
          cp -r unRAIDServer/patches/src/linux-*-Unraid/. linux/
          cd linux
          echo "----------------------------------------[Patching...]-----------------------------------------------------------------"
          find . -type f -iname '*.patch' -print0 | xargs -n1 -0 patch -p1 -i
          sed -i 's/# CONFIG_AUDIT is not set/CONFIG_AUDIT=y/' .config
      - name: Building new kernel
        shell: bash
        if: env.UPDATE == 'True'
        run: |
          echo "----------------------------------------[Working directory: $(pwd)]--------------------------------------------------"
          cd unraid/linux
          echo "----------------------------------------[make oldconfig]-------------------------------------------------------------"
          make olddefconfig
          echo "----------------------------------------[make -j$(nproc) -s bzImage]-------------------------------------------------"
          make -j$(nproc) -s bzImage
          echo "----------------------------------------[make -j$(nproc) -s]---------------------------------------------------------"
          make -j$(nproc) -s
          cd ..
          cd ..
          echo "----------------------------------------[Working directory: $(pwd)]--------------------------------------------------"
          ls -l
          ls -l unraid/linux/arch/x86_64/boot/
          mv -f unraid/linux/arch/x86_64/boot/bzImage /home/runner/work/unRAID-audit/unRAID-audit/bzImage
          rm -dr unraid
          sha256sum $WD/bzImage | cut -d " " -f 1 > bzImage.sha256
          ls -l /home/runner/work/unRAID-audit/unRAID-audit
          ls -l
      - name: Update version.config
        shell: bash
        if: env.UPDATE == 'True'
        run: |
          echo "----------------------------------------[Working directory: $(pwd)]--------------------------------------------------"
          echo "KERNEL_VERSION=$KERNEL_VERSION" > versions.config
          echo "UNRAID_VERSION=$UNRAID_VERSION" >> versions.config
      - name: Git Commit 
        if: env.UPDATE == 'True'
        run: |
          echo "----------------------------------------[Working directory: $(pwd)]--------------------------------------------------"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Updated kernel"
          ls -l
          git add --all
          #git add versions.config
          #git add bzImage
          #git add bzImage.sha256
      - name: Git Push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.unRAID_audit }}
          branch: main
          force: true
